// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  firstname String
  lastname String?
  email String @unique
  password String
  posts Post[]
  likes LikedPost[]
  bookmarks bookMarkedPost[]
}

model Post{
  id Int @id @default(autoincrement())
  title String
  content String
  date String 
  published Boolean @default(false)
  likedByCurrentUser Boolean @default(false)
  bookmarkedByCurrentUser Boolean @default(false)
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  NumberOfLikes Int @default(0)
  likes LikedPost[]
  PostsBookMarked bookMarkedPost[]
}

model LikedPost{
  id Int @id @default(autoincrement())
  likedByAuthor User @relation(fields: [LikedById], references: [id])
  LikedById Int
  LikesOnWhichPost Post @relation(fields:[PostId],references: [id])
  PostId Int
  @@unique([LikedById,PostId])
  
}

model bookMarkedPost{
  id Int @id @default(autoincrement())
  BookMarkedByAuthor User @relation(fields: [BookMarkerId], references: [id])
  BookMarkerId Int
  BookMarkedPost Post @relation(fields: [BookMarkedPostId], references: [id])
  BookMarkedPostId Int
}
